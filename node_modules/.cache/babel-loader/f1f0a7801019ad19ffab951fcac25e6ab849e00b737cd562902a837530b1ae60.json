{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{scanTextFiles,getFileInfo}from'../StoryTxt/StoryService/FileScannerService.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Story=()=>{const{title}=useParams();const navigate=useNavigate();const[story,setStory]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{loadStory();},[title]);const loadStory=async()=>{try{setLoading(true);setError(null);// Scan for text files in the StoryTxt folder\nconst scanResult=await scanTextFiles('./src/StoryTxt/');if(scanResult.success){// Find the story that matches the title parameter\nconst storyData=await Promise.all(scanResult.data.files.map(async file=>{const fileInfo=await getFileInfo(file.path);return fileInfo.success?fileInfo.data:null;}));// Filter out any failed file reads and find matching story\nconst validStories=storyData.filter(story=>story!==null);const matchingStory=validStories.find(story=>{const storyTitle=story.title.replace(/[^a-zA-Z0-9\\s]/g,'').replace(/\\s+/g,'-').toLowerCase();return storyTitle===title;});if(matchingStory){setStory(matchingStory);}else{setError('Story not found');}}else{setError(scanResult.error.message);}}catch(err){setError(err.message);}finally{setLoading(false);}};const handleBackToStories=()=>{navigate('/stories');};return/*#__PURE__*/_jsxs(\"div\",{className:\"story-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"story-header\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleBackToStories,className:\"back-button\",children:\"\\u2190 BACK TO STORIES\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"story-title-section\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"story-title\",children:story.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"story-file-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metadata-line\",children:[story.fileSize,\" bytes\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metadata-line\",children:[\"LINES: \",story.lineCount]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metadata-line\",children:[\"WORDS: \",story.wordCount]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metadata-line\",children:[\"CHARACTERS: \",story.characterCount]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"story-text\",children:story.content.split('\\n').map((line,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"text-line\",children:line},index))})]});};export default Story;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","scanTextFiles","getFileInfo","jsx","_jsx","jsxs","_jsxs","Story","title","navigate","story","setStory","loading","setLoading","error","setError","loadStory","scanResult","success","storyData","Promise","all","data","files","map","file","fileInfo","path","validStories","filter","matchingStory","find","storyTitle","replace","toLowerCase","message","err","handleBackToStories","className","children","onClick","fileSize","lineCount","wordCount","characterCount","content","split","line","index"],"sources":["/Users/verseofthesun/Web/verseofthesun/VOTS/src/Pages/Story.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { scanTextFiles, getFileInfo } from '../StoryTxt/StoryService/FileScannerService.js';\n\nconst Story = () => {\n  const { title } = useParams();\n  const navigate = useNavigate();\n  const [story, setStory] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    loadStory();\n  }, [title]);\n\n  const loadStory = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Scan for text files in the StoryTxt folder\n      const scanResult = await scanTextFiles('./src/StoryTxt/');\n      \n      if (scanResult.success) {\n        // Find the story that matches the title parameter\n        const storyData = await Promise.all(\n          scanResult.data.files.map(async (file) => {\n            const fileInfo = await getFileInfo(file.path);\n            return fileInfo.success ? fileInfo.data : null;\n          })\n        );\n        \n        // Filter out any failed file reads and find matching story\n        const validStories = storyData.filter(story => story !== null);\n        const matchingStory = validStories.find(story => {\n          const storyTitle = story.title.replace(/[^a-zA-Z0-9\\s]/g, '').replace(/\\s+/g, '-').toLowerCase();\n          return storyTitle === title;\n        });\n        \n        if (matchingStory) {\n          setStory(matchingStory);\n        } else {\n          setError('Story not found');\n        }\n      } else {\n        setError(scanResult.error.message);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBackToStories = () => {\n    navigate('/stories');\n  };\n\n  return (\n    <div className=\"story-container\">\n      <div className=\"story-header\">\n        <button onClick={handleBackToStories} className=\"back-button\">\n          ‚Üê BACK TO STORIES\n        </button>\n        <div className=\"story-title-section\">\n          <h1 className=\"story-title\">{story.title}</h1>\n          <div className=\"story-file-info\">\n            <div className=\"metadata-line\">{story.fileSize} bytes</div>\n            <div className=\"metadata-line\">LINES: {story.lineCount}</div>\n            <div className=\"metadata-line\">WORDS: {story.wordCount}</div>\n            <div className=\"metadata-line\">CHARACTERS: {story.characterCount}</div>\n          </div>\n        </div>\n      </div>\n      \n \n      \n      <div className=\"story-text\">\n        {story.content.split('\\n').map((line, index) => (\n          <div key={index} className=\"text-line\">{line}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Story;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}