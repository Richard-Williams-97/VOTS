{"ast":null,"code":"var _jsxFileName = \"/Users/verseofthesun/Web/verseofthesun/src/Pages/Story.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { scanTextFiles, getFileInfo } from '../StoryTxt/StoryService/FileScannerService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Story = () => {\n  _s();\n  const {\n    title\n  } = useParams();\n  const navigate = useNavigate();\n  const [story, setStory] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    loadStory();\n  }, [title]);\n  const loadStory = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Scan for text files in the StoryTxt folder\n      const scanResult = await scanTextFiles('./src/StoryTxt/');\n      if (scanResult.success) {\n        // Find the story that matches the title parameter\n        const storyData = await Promise.all(scanResult.data.files.map(async file => {\n          const fileInfo = await getFileInfo(file.path);\n          return fileInfo.success ? fileInfo.data : null;\n        }));\n\n        // Filter out any failed file reads and find matching story\n        const validStories = storyData.filter(story => story !== null);\n        const matchingStory = validStories.find(story => {\n          const storyTitle = story.title.replace(/[^a-zA-Z0-9\\s]/g, '').replace(/\\s+/g, '-').toLowerCase();\n          return storyTitle === title;\n        });\n        if (matchingStory) {\n          setStory(matchingStory);\n        } else {\n          setError('Story not found');\n        }\n      } else {\n        setError(scanResult.error.message);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleBackToStories = () => {\n    navigate('/stories');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"story-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"story-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToStories,\n        className: \"back-button\",\n        children: \"\\u2190 BACK TO STORIES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"story-title-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"story-title\",\n          children: story.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"story-file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metadata-line\",\n            children: [story.fileSize, \" bytes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metadata-line\",\n            children: [\"LINES: \", story.lineCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metadata-line\",\n            children: [\"WORDS: \", story.wordCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metadata-line\",\n            children: [\"CHARACTERS: \", story.characterCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"story-text\",\n      children: story.content.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-line\",\n        children: line\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Story, \"bDcdY5epXk2G0ylF8UfqoKMq59I=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Story;\nexport default Story;\nvar _c;\n$RefreshReg$(_c, \"Story\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","scanTextFiles","getFileInfo","jsxDEV","_jsxDEV","Story","_s","title","navigate","story","setStory","loading","setLoading","error","setError","loadStory","scanResult","success","storyData","Promise","all","data","files","map","file","fileInfo","path","validStories","filter","matchingStory","find","storyTitle","replace","toLowerCase","message","err","handleBackToStories","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fileSize","lineCount","wordCount","characterCount","content","split","line","index","_c","$RefreshReg$"],"sources":["/Users/verseofthesun/Web/verseofthesun/src/Pages/Story.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { scanTextFiles, getFileInfo } from '../StoryTxt/StoryService/FileScannerService.js';\n\nconst Story = () => {\n  const { title } = useParams();\n  const navigate = useNavigate();\n  const [story, setStory] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    loadStory();\n  }, [title]);\n\n  const loadStory = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Scan for text files in the StoryTxt folder\n      const scanResult = await scanTextFiles('./src/StoryTxt/');\n      \n      if (scanResult.success) {\n        // Find the story that matches the title parameter\n        const storyData = await Promise.all(\n          scanResult.data.files.map(async (file) => {\n            const fileInfo = await getFileInfo(file.path);\n            return fileInfo.success ? fileInfo.data : null;\n          })\n        );\n        \n        // Filter out any failed file reads and find matching story\n        const validStories = storyData.filter(story => story !== null);\n        const matchingStory = validStories.find(story => {\n          const storyTitle = story.title.replace(/[^a-zA-Z0-9\\s]/g, '').replace(/\\s+/g, '-').toLowerCase();\n          return storyTitle === title;\n        });\n        \n        if (matchingStory) {\n          setStory(matchingStory);\n        } else {\n          setError('Story not found');\n        }\n      } else {\n        setError(scanResult.error.message);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBackToStories = () => {\n    navigate('/stories');\n  };\n\n  return (\n    <div className=\"story-container\">\n      <div className=\"story-header\">\n        <button onClick={handleBackToStories} className=\"back-button\">\n          ‚Üê BACK TO STORIES\n        </button>\n        <div className=\"story-title-section\">\n          <h1 className=\"story-title\">{story.title}</h1>\n          <div className=\"story-file-info\">\n            <div className=\"metadata-line\">{story.fileSize} bytes</div>\n            <div className=\"metadata-line\">LINES: {story.lineCount}</div>\n            <div className=\"metadata-line\">WORDS: {story.wordCount}</div>\n            <div className=\"metadata-line\">CHARACTERS: {story.characterCount}</div>\n          </div>\n        </div>\n      </div>\n      \n \n      \n      <div className=\"story-text\">\n        {story.content.split('\\n').map((line, index) => (\n          <div key={index} className=\"text-line\">{line}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Story;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}